{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/Dialogs/DialogItem/DialogItem.js","assets/icon/Loader.svg","components/Dialogs/Message/Messages.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","DialogItem","props","className","path","id","dialog","selectedItem","to","dialogItem_content","avatar","src","photo","alt","name","MessageContainer","this","loadMessages","interlocutor","userId","isOwner","prevState","setIsFetchingStatus","isFetching","ownerPhoto","updateCountMessage","message","interlocutorName","displayName","React","Component","Messages","console","log","useState","countMessage","setCount","loading","setSLoading","updateSetScroll","target","scrollTop","useEffect","messageElem","reverse","map","item","elem","message_rigth","message_left","message__item","photoURL","message__avatar","messageName","message__text","push","onScroll","Preloader","preloader","preloader_null","AddNewMessageFormRedux","onSubmit","data","sendMessage","newMessage","ownerName","maxLength50","maxLengthCreator","reduxForm","form","message__form","handleSubmit","Field","component","Textarea","contenteditable","placeholder","validate","required","message_btn","Button","text","connect","state","auth","users","userPage","photoOwner","dialogsPage","messageData","Dialogs","followers","followingInUserId","j","dialogsElements","d","location","pathname","interlocutorId","slice","interlocutorIndex","findIndex","dialogs_title","dialogs","dialogsItems","DialogsContainer","getAllUsers","getFollowers","compose","dialogsData","messageBody","newMessageBody","getFollowingInUserId","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.e474b7c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Dcow\",\"dialog\":\"Dialogs_dialog__2rlRZ\",\"messages\":\"Dialogs_messages__38Mk_\",\"dialogs_title\":\"Dialogs_dialogs_title__1_0em\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__1Ogsw\",\"dialogsItems\":\"DialogItem_dialogsItems__16DK3\",\"dialog\":\"DialogItem_dialog__oHWe6\",\"messages\":\"DialogItem_messages__1aLd7\",\"selectedItem\":\"DialogItem_selectedItem__3K81j\",\"avatar\":\"DialogItem_avatar__1asPg\",\"dialogItem_content\":\"DialogItem_dialogItem_content__23NF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__TZWUb\",\"dialogsItems\":\"Message_dialogsItems__1vPxM\",\"dialog\":\"Message_dialog__3wqyg\",\"messages\":\"Message_messages__2akbG\",\"message_rigth\":\"Message_message_rigth__1X4m5\",\"message_left\":\"Message_message_left__2efCH\",\"message__avatar\":\"Message_message__avatar__2wyDT\",\"messageName\":\"Message_messageName__2OJIF\",\"message__item\":\"Message_message__item__2ycCy\",\"message__text\":\"Message_message__text__1T0oB\",\"message__form\":\"Message_message__form__3LnmN\",\"message_btn\":\"Message_message_btn__1EuVA\",\"preloader_null\":\"Message_preloader_null__1uMc9\",\"preloader\":\"Message_preloader__zqanY\"};","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from \"react\";\nimport s from \"./DialogItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\nconst DialogItem = (props) => {\n  return (\n    <div className={props.path == `/Dialogs/${props.id}` ? s.dialog + \" \" + s.selectedItem : s.dialog}>\n      <NavLink to={\"/Dialogs/\" + props.id}>\n        <div className={s.dialogItem_content}><img className={s.avatar} src={props.photo} alt=\"icon\" />{props.name}</div>\n      </NavLink>\n    </div>\n  );\n};\nexport default DialogItem;","export default __webpack_public_path__ + \"static/media/Loader.193097d2.svg\";","import React from \"react\";\nimport s from \"./Message.module.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../utils/validation/FormValid\";\nimport { Textarea } from \"../../common/FormControl/FormControl\";\nimport { connect } from \"react-redux\";\nimport {\n  sendMessage,\n  loadMessages,\n  setIsFetchingStatus\n} from \"../../../redux/dialogs-reducer\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport Button from \"../../btn/Button\"\nimport { useState } from \"react\";\nimport Preloader from '../../../assets/icon/Loader.svg'\n\nclass MessageContainer extends React.Component {\n  componentDidMount() {\n    this.props.loadMessages(this.props.interlocutor.userId, this.props.isOwner, 10)\n  }\n  componentDidUpdate(prevState) {\n    if (prevState.path != this.props.path) {\n      this.props.loadMessages(this.props.interlocutor.userId, this.props.isOwner, 10)\n    }\n  }\n\n  render() {\n    return <Messages\n      props={this.props}\n      setIsFetchingStatus={this.props.setIsFetchingStatus}\n      isFetching={this.props.isFetching}\n      isOwner={this.props.isOwner}\n      ownerPhoto={this.props.ownerPhoto}\n      updateCountMessage={this.updateCountMessage}\n      loadMessages={this.props.loadMessages}\n      interlocutor={this.props.interlocutor}\n      message={this.props.message}\n      interlocutorName={this.props.interlocutor.name ? this.props.interlocutor.name : this.props.interlocutor.displayName}\n    />\n  }\n}\nlet mapStateToProps = (state) => {\n  return {\n    isOwner: state.auth.isOwner,\n    users: state.userPage.users,\n    ownerName: state.auth.ownerName,\n    ownerPhoto: state.auth.photoOwner,\n    message: state.dialogsPage.messageData,\n    isFetching: state.dialogsPage.isFetching,\n    state: state\n  };\n};\n\n\nconst Messages = (props) => {\n  console.log(props);\n  const [countMessage, setCount] = useState(10);\n\n  const [loading, setSLoading] = useState(false);\n  let updateSetCount = () => {\n    setCount(countMessage + 10)\n  }\n\n  let updateSetScroll = (e) => {\n    if (e.target.scrollTop == 0) {\n      updateSetCount()\n      setSLoading(true)\n    } else {\n      setSLoading(false)\n    }\n\n  }\n\n  useEffect(() => {\n    if (loading) {\n      props.loadMessages(props.interlocutor.userId, props.isOwner, countMessage)\n      setSLoading(false)\n    }\n  }, [loading])\n\n  useEffect(() => {\n    setCount(10)\n  }, [props.interlocutor.userId])\n  let onSubmit = (data) => {\n    props.props.sendMessage(\n      data.newMessage,\n      props.interlocutor.userId,\n      props.isOwner,\n      props.props.ownerName,\n    );\n  };\n  let messageElem = [];\n  if (props.message[props.interlocutor.userId] && props.message[props.interlocutor.userId].length > 0) {\n    [...props.message[props.interlocutor.userId]].reverse().map((item) => {\n      let elem = <div className={item.userId === props.isOwner ? s.message_rigth : s.message_left}>\n        <div className={s.message__item}><img src={item.userId == props.isOwner ? props.ownerPhoto : props.interlocutor.photoURL} alt=\"icon\" className={s.message__avatar} />\n          <p className={s.messageName}>{item.name}</p>\n        </div>\n        <div className={s.message__text}>\n          {item.message}\n        </div>\n      </div>\n      messageElem.push(elem)\n    })\n  } else {\n    messageElem.push(<div>\n      <h2>Вы еще не общались с {props.interlocutor.displayName}</h2>\n      <p>Для начала поздаровайтесь с {props.interlocutor.displayName}</p>\n    </div>)\n  }\n\n  return <div>\n    <div onScroll={(e) => {\n      updateSetScroll(e)\n    }} className={s.dialog}>\n\n      {loading ? <img src={Preloader} alt=\"preloader\" className={s.preloader} /> : <div className={s.preloader_null} />}\n      {messageElem}\n\n    </div>\n    <AddNewMessageFormRedux onSubmit={onSubmit} />\n  </div>;\n};\n\n\n\nconst maxLength50 = maxLengthCreator(50);\nconst AddNewMessageForm = (props) => {\n  return (\n    <div className={s.message__form}>\n      <form onSubmit={props.handleSubmit}>\n        <Field\n          component={Textarea}\n          contenteditable=\"true\"\n          placeholder=\"Enter your message here\"\n          name=\"newMessage\"\n          validate={[required, maxLength50]}\n        />\n        <div className={s.message_btn}>\n          <Button text=\"Отправить сообщение\" />\n        </div>\n      </form>\n    </div>\n  );\n};\nconst AddNewMessageFormRedux = reduxForm({ form: \"newMessage\" })(\n  AddNewMessageForm\n);\n\nexport default connect(mapStateToProps, { sendMessage, loadMessages, setIsFetchingStatus })(MessageContainer);\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageContainer from \"./Message/Messages\";\nconst Dialogs = ({ props }) => {\n  let followers = [];\n  for (let i of props.followingInUserId) {\n    for (let j of props.users) {\n      if (i == j.userId) {\n        followers.push(j);\n      }\n    }\n  }\n\n  let dialogsElements = followers.map((d) => (\n    <DialogItem\n      photo={d.photoURL} name={d.displayName} id={d.userId} path={props.location.pathname} />\n  ));\n\n  let interlocutorId = props.location.pathname.slice(9);\n  let interlocutorIndex = props.users.findIndex((item) => {\n    if (item.userId === interlocutorId)\n      return item\n  });\n  let interlocutor = props.users[interlocutorIndex];\n  return (\n    <div >\n      {props.location.pathname === \"/Dialogs\" ?\n        <div className={s.dialogs_title}>\n          {\n            dialogsElements.length > 0 ?\n              \"Выбeрите диалог\" :\n              \"У вас еще нету ни одного друга. Для того чтобы начать диалог, вам необходимо взаимно подписаться на необходимого  человека\"\n          }</div> : null}\n      <div className={s.dialogs}>\n        <div className={s.dialogsItems}>\n          {dialogsElements}\n        </div>\n        {props.location.pathname !== \"/Dialogs\" ?\n          <MessageContainer\n            path={props.location.pathname}\n            interlocutor={interlocutor} />\n\n          : null\n        }\n      </div>\n    </div>\n  );\n};\n\n\nexport default Dialogs;\n","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport { getFollowingInUserId } from \"../../redux/user-selectors\";\nimport { getAllUsers, getFollowers } from \"../../redux/user-reducer\";\nimport { connect } from \"react-redux\";\nimport withAuthRedirect from \"../HOC/RedirectContainer\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsData: state.dialogsPage.dialogsData,\n    messageBody: state.dialogsPage.newMessageBody,\n    messageData: state.dialogsPage.messageData,\n    followingInUserId: getFollowingInUserId(state),\n    users: state.userPage.users,\n    isOwner: state.auth.isOwner\n  };\n};\n\nclass DialogsContainer extends React.Component {\n  componentDidMount() {\n    this.props.getAllUsers();\n    this.props.getFollowers(this.props.isOwner)\n  }\n  render() {\n    return <Dialogs props={this.props} />\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, { getFollowers, getAllUsers }),\n  withRouter,\n  withAuthRedirect\n)(DialogsContainer);\n// export const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n// let DialogsAuthRedirectContainer = withAuthRedirect(DialogsContainer);\n// export default DialogsAuthRedirectContainer;\n"],"sourceRoot":""}