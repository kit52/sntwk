{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Messages.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","DialogItem","props","className","path","id","dialog","selectedItem","to","avatar","src","photo","alt","name","MessageContainer","this","loadMessages","interlocutor","userId","isOwner","prevState","interlocutorPhoto","photoURL","message","interlocutorName","displayName","React","Component","Messages","console","log","divRef","useRef","useEffect","current","scrollIntoView","behavior","messageElem","reverse","map","item","elem","message_rigth","message_left","message__item","ownerPhoto","message__avatar","messageName","message__text","push","ref","AddNewMessageFormRedux","onSubmit","data","sendMessage","newMessage","ownerName","maxLength50","maxLengthCreator","reduxForm","form","message__form","handleSubmit","Field","component","Textarea","contenteditable","placeholder","validate","required","connect","state","auth","users","userPage","profile","photoOwner","dialogsPage","messageData","Dialogs","followers","followingInUserId","j","dialogsElements","d","location","pathname","interlocutorId","slice","interlocutorIndex","findIndex","dialogs","dialogsItems","DialogsContainer","getAllUsers","getFollowers","compose","dialogsData","messageBody","newMessageBody","getFollowingInUserId","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.6e47f01d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Dcow\",\"dialog\":\"Dialogs_dialog__2rlRZ\",\"messages\":\"Dialogs_messages__38Mk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__1Ogsw\",\"dialogsItems\":\"DialogItem_dialogsItems__16DK3\",\"dialog\":\"DialogItem_dialog__oHWe6\",\"messages\":\"DialogItem_messages__1aLd7\",\"selectedItem\":\"DialogItem_selectedItem__3K81j\",\"avatar\":\"DialogItem_avatar__1asPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__TZWUb\",\"dialogsItems\":\"Message_dialogsItems__1vPxM\",\"dialog\":\"Message_dialog__3wqyg\",\"messages\":\"Message_messages__2akbG\",\"message_rigth\":\"Message_message_rigth__1X4m5\",\"message_left\":\"Message_message_left__2efCH\",\"message__avatar\":\"Message_message__avatar__2wyDT\",\"messageName\":\"Message_messageName__2OJIF\",\"message__item\":\"Message_message__item__2ycCy\",\"message__text\":\"Message_message__text__1T0oB\",\"message__form\":\"Message_message__form__3LnmN\"};","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from \"react\";\nimport s from \"./DialogItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\nconst DialogItem = (props) => {\n  return (\n    <div className={props.path == `/Dialogs/${props.id}` ? s.dialog + \" \" + s.selectedItem : s.dialog}>\n      <NavLink to={\"/Dialogs/\" + props.id}>\n        <div><img className={s.avatar} src={props.photo} alt=\"icon\" />{props.name}</div>\n      </NavLink>\n    </div>\n  );\n};\nexport default DialogItem;","import React from \"react\";\nimport s from \"./Message.module.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../utils/validation/FormValid\";\nimport { Textarea } from \"../../common/FormControl/FormControl\";\nimport { connect } from \"react-redux\";\nimport {\n  sendMessage,\n  loadMessages\n  // getMessage\n} from \"../../../redux/dialogs-reducer\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\n\n\nclass MessageContainer extends React.Component {\n  componentDidMount() {\n    this.props.loadMessages(this.props.interlocutor.userId, this.props.isOwner)\n  }\n  componentDidUpdate(prevState) {\n    if (prevState.path != this.props.path) {\n      this.props.loadMessages(this.props.interlocutor.userId, this.props.isOwner)\n    }\n  }\n  render() {\n    return <Messages props={this.props}\n      interlocutorPhoto={this.props.interlocutor.photoURL}\n      message={this.props.message[this.props.interlocutor.userId]}\n      interlocutorName={this.props.interlocutor.name ? this.props.interlocutor.name : this.props.interlocutor.displayName}\n    />\n  }\n}\nlet mapStateToProps = (state) => {\n  return {\n    isOwner: state.auth.isOwner,\n    users: state.userPage.users,\n    ownerName: state.auth.profile.displayName,\n    ownerPhoto: state.auth.photoOwner,\n    message: state.dialogsPage.messageData, state: state\n  };\n};\n// interlocutorPhoto: state.userPage.users.findIndex((item)=>{item.userId === this.props.uid})\n\n\nconst Messages = ({ props }) => {\n  console.log(props);\n  const divRef = useRef(null);\n\n  useEffect(() => {\n    divRef.current.scrollIntoView({ behavior: 'smooth' });\n  });\n\n  let onSubmit = (data) => {\n    props.sendMessage(data.newMessage,\n      props.interlocutor.userId,\n      props.isOwner,\n      props.ownerName,\n      props.ownerPhoto\n    );\n  };\n  let messageElem = [];\n  if (props.message[props.interlocutor.userId] && props.message[props.interlocutor.userId].length > 0) {\n    console.log(props.message[props.interlocutor.userId]);\n    [...props.message[props.interlocutor.userId]].reverse().map((item) => {\n      let elem = <div className={item.userId === props.isOwner ? s.message_rigth : s.message_left}>\n        <div className={s.message__item}><img src={item.userId == props.isOwner ? props.ownerPhoto : props.interlocutor.photoURL} alt=\"icon\" className={s.message__avatar} />\n          <p className={s.messageName}>{item.name}</p>\n        </div>\n        <div className={s.message__text}>\n          {item.message}\n        </div>\n      </div>\n      messageElem.push(elem)\n    })\n  } else {\n    messageElem.push(<div>\n      <h2>Вы еще не общались с {props.interlocutor.displayName}</h2>\n      <p>для начала поздаровайтесь с {props.interlocutor.displayName}</p>\n    </div>)\n  }\n\n  return <div>\n    <div className={s.dialog}>\n      {messageElem}\n      <div ref={divRef} />\n    </div>\n    <AddNewMessageFormRedux onSubmit={onSubmit} />\n  </div>;\n};\nconst maxLength50 = maxLengthCreator(50);\nconst AddNewMessageForm = (props) => {\n  return (\n    <div className={s.message__form}>\n      <form onSubmit={props.handleSubmit}>\n        <Field\n          component={Textarea}\n          contenteditable=\"true\"\n          placeholder=\"Enter your message here\"\n          name=\"newMessage\"\n          validate={[required, maxLength50]}\n        />\n        <div>\n          <button>Send message</button>\n        </div>\n      </form>\n    </div>\n  );\n};\nconst AddNewMessageFormRedux = reduxForm({ form: \"newMessage\" })(\n  AddNewMessageForm\n);\n\nexport default connect(mapStateToProps, { sendMessage, loadMessages })(MessageContainer);\n","import React, { useEffect } from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\n\nimport MessageContainer from \"./Message/Messages\";\n\n\n\nconst Dialogs = ({ props }) => {\n\n  // useEffect(() => {\n  //   if (props.users.length == 0) {\n  //     props.getAllUsers();\n  //     props.getFollowers(props.isOwner)\n  //   }\n\n  // });\n\n\n  let followers = [];\n  for (let i of props.followingInUserId) {\n    for (let j of props.users) {\n      if (i == j.userId) {\n        followers.push(j);\n      }\n    }\n  }\n\n  let dialogsElements = followers.map((d) => (\n    <DialogItem\n      photo={d.photoURL} name={d.displayName} id={d.userId} path={props.location.pathname} />\n  ));\n\n  let interlocutorId = props.location.pathname.slice(9);\n  let interlocutorIndex = props.users.findIndex((item) => {\n    if (item.userId === interlocutorId)\n      return item\n  });\n  let interlocutor = props.users[interlocutorIndex];\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsElements}</div>\n      <div>{props.location.pathname === \"/Dialogs\" ?\n        <div>Выбирите диалог</div> :\n        <MessageContainer\n          path={props.location.pathname}\n          interlocutor={interlocutor} />}\n      </div>\n    </div>\n  );\n};\n\n\nexport default Dialogs;\n","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport { getFollowingInUserId } from \"../../redux/user-selectors\";\nimport { getAllUsers, getFollowers } from \"../../redux/user-reducer\";\nimport { connect } from \"react-redux\";\nimport withAuthRedirect from \"../HOC/RedirectContainer\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsData: state.dialogsPage.dialogsData,\n    messageBody: state.dialogsPage.newMessageBody,\n    messageData: state.dialogsPage.messageData,\n    followingInUserId: getFollowingInUserId(state),\n    users: state.userPage.users,\n    isOwner: state.auth.isOwner\n  };\n};\n\nclass DialogsContainer extends React.Component {\n  componentDidMount() {\n    this.props.getAllUsers();\n    this.props.getFollowers(this.props.isOwner)\n  }\n  render() {\n    return <Dialogs props={this.props} />\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, { getFollowers, getAllUsers }),\n  withRouter,\n  withAuthRedirect\n)(DialogsContainer);\n// export const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n// let DialogsAuthRedirectContainer = withAuthRedirect(DialogsContainer);\n// export default DialogsAuthRedirectContainer;\n"],"sourceRoot":""}