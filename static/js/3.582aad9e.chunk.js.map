{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Messages.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","DialogItem","props","className","path","id","dialog","selectedItem","to","dialogItem_content","avatar","src","photo","alt","name","MessageContainer","onSubmit","data","sendMessage","newMessage","interlocutor","userId","isOwner","ownerName","this","loadMessages","prevState","message","ownerPhoto","Fetching","AddNewMessageFormRedux","React","Component","Messages","myRef","createRef","current","scrollIntoView","block","inline","scrollHandler","messageElem","map","item","elem","message_rigth","message_left","message__item","photoURL","message__avatar","messageName","message__text","push","displayName","ref","PureComponent","maxLength50","maxLengthCreator","reduxForm","form","message__form","handleSubmit","onKeyDown","key","preventDefault","handleKeyDown","Field","component","Textarea","contenteditable","placeholder","validate","required","message_btn","Button","text","connect","state","auth","photoOwner","dialogsPage","messageData","setIsFetchingStatus","Dialogs","followers","followingInUserId","users","j","dialogsElements","d","location","pathname","interlocutorId","slice","interlocutorIndex","findIndex","dialogs_title","dialogs","dialogsItems","DialogsContainer","getAllUsers","getFollowers","compose","dialogsData","messageBody","newMessageBody","getFollowingInUserId","userPage","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.582aad9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Dcow\",\"dialog\":\"Dialogs_dialog__2rlRZ\",\"messages\":\"Dialogs_messages__38Mk_\",\"dialogs_title\":\"Dialogs_dialogs_title__1_0em\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__1Ogsw\",\"dialogsItems\":\"DialogItem_dialogsItems__16DK3\",\"dialog\":\"DialogItem_dialog__oHWe6\",\"messages\":\"DialogItem_messages__1aLd7\",\"selectedItem\":\"DialogItem_selectedItem__3K81j\",\"avatar\":\"DialogItem_avatar__1asPg\",\"dialogItem_content\":\"DialogItem_dialogItem_content__23NF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__TZWUb\",\"dialogsItems\":\"Message_dialogsItems__1vPxM\",\"dialog\":\"Message_dialog__3wqyg\",\"messages\":\"Message_messages__2akbG\",\"message_rigth\":\"Message_message_rigth__1X4m5\",\"message_left\":\"Message_message_left__2efCH\",\"message__avatar\":\"Message_message__avatar__2wyDT\",\"messageName\":\"Message_messageName__2OJIF\",\"message__item\":\"Message_message__item__2ycCy\",\"message__text\":\"Message_message__text__1T0oB\",\"message__form\":\"Message_message__form__3LnmN\",\"message_btn\":\"Message_message_btn__1EuVA\",\"preloader_null\":\"Message_preloader_null__1uMc9\",\"preloader\":\"Message_preloader__zqanY\"};","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from \"react\";\nimport s from \"./DialogItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\nconst DialogItem = (props) => {\n  return (\n    <div className={props.path == `/Dialogs/${props.id}` ? s.dialog + \" \" + s.selectedItem : s.dialog}>\n      <NavLink to={\"/Dialogs/\" + props.id}>\n        <div className={s.dialogItem_content}><img className={s.avatar} src={props.photo} alt=\"icon\" />{props.name}</div>\n      </NavLink>\n    </div>\n  );\n};\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./Message.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validation/FormValid\";\r\nimport { Textarea } from \"../../common/FormControl/FormControl\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  sendMessage,\r\n  loadMessages,\r\n  setIsFetchingStatus\r\n} from \"../../../redux/dialogs-reducer\";\r\nimport Button from \"../../btn/Button\"\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isOwner: state.auth.isOwner,\r\n    ownerName: state.auth.ownerName,\r\n    ownerPhoto: state.auth.photoOwner,\r\n    message: state.dialogsPage.messageData,\r\n    Fetching: state.dialogsPage.Fetching\r\n  };\r\n};\r\n\r\nclass MessageContainer extends React.Component {\r\n  onSubmit = (data) => {\r\n    this.props.sendMessage(data.newMessage, this.props.interlocutor.userId, this.props.isOwner, this.props.ownerName);\r\n  };\r\n  componentDidMount() {\r\n    this.props.loadMessages(this.props.interlocutor.userId, this.props.isOwner, 20)\r\n  }\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.path != this.props.path) {\r\n\r\n      this.props.loadMessages(this.props.interlocutor.userId, this.props.isOwner, 20)\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>\r\n      <div className={s.dialog}>\r\n        <Messages\r\n          message={this.props.message[this.props.interlocutor.userId]}\r\n          interlocutor={this.props.interlocutor}\r\n          isOwner={this.props.isOwner}\r\n          ownerPhoto={this.props.ownerPhoto}\r\n          Fetching={this.props.Fetching}\r\n        />\r\n      </div>\r\n      <AddNewMessageFormRedux onSubmit={this.onSubmit} />\r\n    </div>\r\n  }\r\n}\r\n\r\n\r\nclass Messages extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n  }\r\n  scrollHandler() {\r\n    this.myRef.current.scrollIntoView({ block: \"end\", inline: \"nearest\" })\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.Fetching && !this.props.Fetching) {\r\n      this.scrollHandler()\r\n    }\r\n\r\n  }\r\n  render() {\r\n    let messageElem = [];\r\n    if (this.props.message && this.props.message.length > 0) {\r\n      [...this.props.message].map((item) => {\r\n        let elem = <div className={item.userId === this.props.isOwner ? s.message_rigth : s.message_left}>\r\n          <div className={s.message__item} key={item.data + item.userId}><img src={item.userId == this.props.isOwner ? this.props.ownerPhoto : this.props.interlocutor.photoURL} alt=\"icon\" className={s.message__avatar} />\r\n            <p className={s.messageName}>{item.name}</p>\r\n          </div>\r\n          <div className={s.message__text}>\r\n            {item.message}\r\n          </div>\r\n        </div>\r\n        messageElem.push(elem)\r\n      })\r\n    } else {\r\n      messageElem.push(<div key=\"welcome_message\">\r\n        <h2>Вы еще не общались с {this.props.interlocutor.displayName}</h2>\r\n        <p>Для начала поздаровайтесь с {this.props.interlocutor.displayName}</p>\r\n      </div>)\r\n    }\r\n    return (<>\r\n      {messageElem}\r\n      <div ref={this.myRef} ></div>\r\n    </>)\r\n  };\r\n};\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddNewMessageForm = (props) => {\r\n  const handleKeyDown = (e) => {\r\n\r\n    if (e.key == \"Enter\") {\r\n      e.preventDefault()\r\n      props.handleSubmit()\r\n    }\r\n  }\r\n  return (\r\n    <div className={s.message__form}>\r\n      <form onSubmit={props.handleSubmit} onKeyDown={e => handleKeyDown(e)}>\r\n        <Field\r\n          component={Textarea}\r\n          contenteditable=\"true\"\r\n          placeholder=\"Enter your message here\"\r\n          name=\"newMessage\"\r\n          validate={[required, maxLength50]}\r\n        />\r\n        <div className={s.message_btn}>\r\n          <Button text=\"Отправить сообщение\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst AddNewMessageFormRedux = reduxForm({ form: \"newMessage\" })(\r\n  AddNewMessageForm\r\n);\r\n\r\nexport default connect(mapStateToProps, { sendMessage, loadMessages, setIsFetchingStatus })(MessageContainer);\r\n\r\n\r\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageContainer from \"./Message/Messages\";\nconst Dialogs = ({ props }) => {\n  let followers = [];\n  for (let i of props.followingInUserId) {\n    for (let j of props.users) {\n      if (i == j.userId) {\n        followers.push(j);\n      }\n    }\n  }\n\n  let dialogsElements = followers.map((d) => (\n    <DialogItem\n      photo={d.photoURL} name={d.displayName} id={d.userId} path={props.location.pathname} key={d.userId} />\n  ));\n\n  let interlocutorId = props.location.pathname.slice(9);\n  let interlocutorIndex = props.users.findIndex((item) => {\n    if (item.userId === interlocutorId)\n      return item\n  });\n  let interlocutor = props.users[interlocutorIndex];\n  return (\n    <div >\n      {props.location.pathname === \"/Dialogs\" ?\n        <div className={s.dialogs_title}>\n          {\n            dialogsElements.length > 0 ?\n              \"Выбeрите диалог\" :\n              \"У вас еще нету ни одного друга. Для того чтобы начать диалог, вам необходимо взаимно подписаться на необходимого  человека\"\n          }</div> : null}\n      <div className={s.dialogs}>\n        <div className={s.dialogsItems}>\n          {dialogsElements}\n        </div>\n        {props.location.pathname !== \"/Dialogs\" ?\n          <MessageContainer\n            path={props.location.pathname}\n            interlocutor={interlocutor} />\n          : null\n        }\n      </div>\n    </div>\n  );\n};\n\n\nexport default Dialogs;\n","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport { getFollowingInUserId } from \"../../redux/user-selectors\";\nimport { getAllUsers, getFollowers } from \"../../redux/user-reducer\";\nimport { connect } from \"react-redux\";\nimport withAuthRedirect from \"../HOC/RedirectContainer\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsData: state.dialogsPage.dialogsData,\n    messageBody: state.dialogsPage.newMessageBody,\n    messageData: state.dialogsPage.messageData,\n    followingInUserId: getFollowingInUserId(state),\n    users: state.userPage.users,\n    isOwner: state.auth.isOwner\n  };\n};\n\nclass DialogsContainer extends React.Component {\n  componentDidMount() {\n    this.props.getAllUsers();\n    this.props.getFollowers(this.props.isOwner)\n  }\n  render() {\n    return <Dialogs props={this.props} />\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, { getFollowers, getAllUsers }),\n  withRouter,\n  withAuthRedirect\n)(DialogsContainer);\n// export const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n// let DialogsAuthRedirectContainer = withAuthRedirect(DialogsContainer);\n// export default DialogsAuthRedirectContainer;\n"],"sourceRoot":""}